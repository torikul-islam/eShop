@model eShop.Areas.Admin.Models.Page

@{
    ViewBag.Title = "Add Page";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Add Page</h2>
@*@if (@TempData["mess"] != null)
    {
        <div class="alert alert-success">
            @TempData["mess"]
        </div>
    }*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group row">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Body, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.HasSidebar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.HasSidebar)
                    @Html.ValidationMessageFor(model => model.HasSidebar, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-4 text-center">
            <div class="form-group">
                <button type="submit" class="btn btn-outline-primary js-add">Add Page</button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Page", "Index", null, new { @class = "btn btn-outline-dark" })
</div>
@section scripts{
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>

    <script>
        CKEDITOR.replace("Body");
    </script>

}